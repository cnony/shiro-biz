<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:security="http://www.springframework.org/schema/security"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemalocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        			 http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
                    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
                    http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
					http://www.springframework.org/schema/security  http://www.springframework.org/schema/security/spring-security.xsd
       	 			http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
       	 			http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd"
	default-autowire="byName" default-lazy-init="false">

	<!-- 缓存管理器 -->
	<bean class="org.calonlan.security.spring.SpringCacheManagerWrapper" id="cacheManager">
		<property name="cacheManager" ref="springCacheManager"></property>
	</bean>

	<!-- 凭证匹配器 -->
	<bean class="org.calonlan.security.credentials.RetryLimitHashedCredentialsMatcher" id="credentialsMatcher">
		<constructor-arg ref="cacheManager">
			<property name="hashAlgorithmName" value="md5">
				<property name="hashIterations" value="2">
					<property name="storedCredentialsHexEncoded" value="true">
					</property>
				</property>
			</property>
		</constructor-arg>
	</bean>

	<!-- Realm实现 -->
	<bean class="org.calonlan.security.realm.UserRealm" id="userRealm">
		<property name="credentialsMatcher" ref="credentialsMatcher">
			<property name="cachingEnabled" value="true">
				<!--<property name="authenticationCachingEnabled" value="true"/> -->
				<!--<property name="authenticationCacheName" value="authenticationCache"/> -->
				<!--<property name="authorizationCachingEnabled" value="true"/> -->
				<!--<property name="authorizationCacheName" value="authorizationCache"/> -->
			</property>
		</property>
	</bean>

	<!-- 会话ID生成器 -->
	<bean class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator" id="sessionIdGenerator">

		<!-- 会话Cookie模板 -->
		<bean class="org.apache.shiro.web.servlet.SimpleCookie" id="sessionIdCookie">
			<constructor-arg value="sid">
				<property name="httpOnly" value="true">
					<property name="maxAge" value="-1">
					</property>
				</property>
			</constructor-arg>
		</bean>

		<bean class="org.apache.shiro.web.servlet.SimpleCookie" id="rememberMeCookie">
			<constructor-arg value="rememberMe">
				<property name="httpOnly" value="true">
					<property name="maxAge" value="2592000"><!-- 30天 -->
					</property>
				</property>
			</constructor-arg>
		</bean>

		<!-- rememberMe管理器 -->
		<bean class="org.apache.shiro.web.mgt.CookieRememberMeManager"
			id="rememberMeManager">
			<!-- rememberMe cookie加密的密钥 建议每个项目都不一样 默认AES算法 密钥长度（128 256 512 位） -->
			<property name="cipherKey"
				value="#{T(org.apache.shiro.codec.Base64).decode('4AvVhmFLUs0KTA3Kprsdag==')}">
				<property name="cookie" ref="rememberMeCookie">
				</property>
			</property>
		</bean>

		<!-- 会话DAO -->
		<bean class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO"
			id="sessionDAO">
			<property name="activeSessionsCacheName" value="shiro-activeSessionCache">
				<property name="sessionIdGenerator" ref="sessionIdGenerator">
				</property>
			</property>
		</bean>

		<!-- 会话验证调度器 -->
		<bean
			class="org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler"
			id="sessionValidationScheduler">
			<property name="sessionValidationInterval" value="1800000">
				<property name="sessionManager" ref="sessionManager">
				</property>
			</property>
		</bean>

		<!-- 会话管理器 -->
		<bean class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager"
			id="sessionManager">
			<property name="globalSessionTimeout" value="1800000">
				<property name="deleteInvalidSessions" value="true">
					<property name="sessionValidationSchedulerEnabled" value="true">
						<property name="sessionValidationScheduler" ref="sessionValidationScheduler">
							<property name="sessionIdCookieEnabled" property=""
								ref="<span style=" value="true">
								<property name="sessionIdCookie" ref="sessionIdCookie">
								</property>
							</property>
						</property>
					</property>
				</property>
			</property>
		</bean>

		<bean class="org.calonlan.security.component.CustomShiroSessionDao"
			id="customShiroSessionDAO">
			<property name="shiroSessionRepository" ref="jedisShiroSessionRepository">//自己定义的sessiondao
			</property>
		</bean>

		<bean class="org.calonlan.security.component.JedisShiroSessionRepository"
			id="jedisShiroSessionRepository">
			<property name="redisManager" ref="redisManager"></property>
		</bean>
		<bean class="org.calonlan.security.component.RedisManager" id="redisManager"></bean>
		//注册上面实现的redisManager到spring中

		<bean class="org.calonlan.security.component.JedisShiroCacheManager"
		id="jedisShiroCacheManager">
		<property name="redisManager" ref="redisManager"></property>
		</bean>
		<bean class="org.calonlan.security.component.CustomShiroCacheManager"
			id="customShiroCacheManager">
			<property name="shrioCacheManager" ref="jedisShiroCacheManager"></property>
		</bean>
		<!-- 安全管理器 -->
		<bean class="org.apache.shiro.web.mgt.DefaultWebSecurityManager"
			id="securityManager">
			<property name="realm" ref="userRealm">
				<property name="sessionManager" ref="sessionManager">
					<property name="rememberMeManager" property=""
						ref="rememberMeManager">
					</property>
				</property>
			</property>
		</bean>

		<!-- 相当于调用SecurityUtils.setSecurityManager(securityManager) -->
		<bean
			class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
			<property name="staticMethod"
				value="org.apache.shiro.SecurityUtils.setSecurityManager">
				<property name="arguments" ref="securityManager">
				</property>
			</property>
		</bean>

		<!-- 基于Form表单的身份验证过滤器 -->
		<bean class="org.apache.shiro.web.filter.authc.FormAuthenticationFilter"
			id="formAuthenticationFilter">
			<property name="usernameParam" value="username">
				<property name="passwordParam" value="password">
					<property name="rememberMeParam" value="rememberMe">
						<property name="loginUrl" value="/login">
						</property>
					</property>
				</property>
			</property>
		</bean>

		<bean class="org.calonlan.security.web.shiro.filter.SysUserFilter"
			id="sysUserFilter">

			<!-- Shiro的Web过滤器 -->
			<bean class="org.apache.shiro.spring.web.ShiroFilterFactoryBean"
				id="shiroFilter">
				<property name="securityManager" ref="securityManager">
					<!-- 逻辑上正确，不起作用 -->
					<property name="loginUrl" value="/login">
						<property name="successUrl" value="/admin/index">
							<property name="filters">
								<util:map>
									<entry key="authc" value-ref="formAuthenticationFilter">
										<entry key="sysUser" value-ref="sysUserFilter">
										</entry>
									</entry>
								</util:map>
							</property>
							<property name="filterChainDefinitions">
								<value>
									/img/** =anon
									/ueditor/jsp/upload/** =anon
									/login = authc
									/authenticated = authc
									/css/** = anon
									/common/** = anon
									/js/** = anon
									/admin/** = user,sysUser
									//*=anon
								</value>
							</property>
						</property>
					</property>
				</property>
			</bean>

			<!-- Shiro生命周期处理器 -->
			<bean class="org.apache.shiro.spring.LifecycleBeanPostProcessor"
				id="lifecycleBeanPostProcessor">
			</bean>
		</bean>
	</bean>

</beans>